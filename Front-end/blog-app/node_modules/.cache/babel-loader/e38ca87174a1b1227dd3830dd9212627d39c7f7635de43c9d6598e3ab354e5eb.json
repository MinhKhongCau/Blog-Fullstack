{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\Java_project\\\\Frontend\\\\blog-app\\\\src\\\\Components\\\\User.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserList() {\n  _s();\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch(\"/demo\").then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      console.log(response.text);\n      return response.data; // Convert response to JSON\n    }).then(data => setData(data)).catch(error => setError(error.message));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Demo Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(UserList, \"nD7edIDRwNLC+/bSdKREAvtAsyY=\");\n_c = UserList;\nexport default UserList;\nvar _c;\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","UserList","_s","data","setData","error","setError","fetch","then","response","ok","Error","console","log","text","catch","message","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","_c","$RefreshReg$"],"sources":["D:/workspace/Java_project/Frontend/blog-app/src/Components/User.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nfunction UserList() {\r\n  const [data, setData] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(\"/demo\")\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        console.log(response.text)\r\n        return response.data; // Convert response to JSON\r\n      })\r\n      .then((data) => setData(data))\r\n      .catch((error) => setError(error.message));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Demo Data</h2>\r\n      {error ? (\r\n        <p style={{ color: 'red' }}>Error: {error}</p>\r\n      ) : (\r\n        <ul>\r\n          {data}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAGxCD,SAAS,CAAC,MAAM;IACdU,KAAK,CAAC,OAAO,CAAC,CACXC,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACAC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACK,IAAI,CAAC;MAC1B,OAAOL,QAAQ,CAACN,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDK,IAAI,CAAEL,IAAI,IAAKC,OAAO,CAACD,IAAI,CAAC,CAAC,CAC7BY,KAAK,CAAEV,KAAK,IAAKC,QAAQ,CAACD,KAAK,CAACW,OAAO,CAAC,CAAC;EAC9C,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEhB,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjBhB,KAAK,gBACJL,OAAA;MAAGsB,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAN,QAAA,GAAC,SAAO,EAACZ,KAAK;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAE9CrB,OAAA;MAAAiB,QAAA,EACGd;IAAI;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACnB,EAAA,CA9BQD,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AAgCjB,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}