{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\Java_project\\\\Frontend\\\\blog-app\\\\src\\\\Components\\\\User.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserList() {\n  _s();\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n  let headers = new Headers();\n  headers.append('Content-Type', 'application/json');\n  headers.append('Accept', 'application/json');\n  headers.append('Access-Control-Allow-Origin', 'http://localhost:3000');\n  headers.append('Access-Control-Allow-Credentials', 'true');\n  headers.append('GET', 'POST', 'OPTIONS');\n  headers.append('Authorization', 'Basic ' + base64.encode(username + \":\" + password));\n  useEffect(() => {\n    fetch(user, {\n      credentials: 'include',\n      method: 'GET',\n      headers: headers\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json(); // Convert response to JSON\n    }).then(data => setData(data)).catch(error => setError(error.message));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Demo Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: JSON.stringify(item)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(UserList, \"nD7edIDRwNLC+/bSdKREAvtAsyY=\");\n_c = UserList;\nexport default UserList;\nvar _c;\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","UserList","_s","data","setData","error","setError","headers","Headers","append","base64","encode","username","password","fetch","user","credentials","method","then","response","ok","Error","json","catch","message","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","map","item","index","JSON","stringify","_c","$RefreshReg$"],"sources":["D:/workspace/Java_project/Frontend/blog-app/src/Components/User.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nfunction UserList() {\r\n  const [data, setData] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n\r\n  let headers = new Headers();\r\n\r\n  headers.append('Content-Type', 'application/json');\r\n  headers.append('Accept', 'application/json');\r\n\r\n  headers.append('Access-Control-Allow-Origin', 'http://localhost:3000');\r\n  headers.append('Access-Control-Allow-Credentials', 'true');\r\n\r\n  headers.append('GET', 'POST', 'OPTIONS');\r\n\r\n  headers.append('Authorization', 'Basic ' + base64.encode(username + \":\" + password));\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(user, {\r\n      credentials: 'include',\r\n      method: 'GET',\r\n      headers: headers\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        return response.json(); // Convert response to JSON\r\n      })\r\n      .then((data) => setData(data))\r\n      .catch((error) => setError(error.message));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Demo Data</h2>\r\n      {error ? (\r\n        <p style={{ color: 'red' }}>Error: {error}</p>\r\n      ) : (\r\n        <ul>\r\n          {data.map((item, index) => (\r\n            <li key={index}>{JSON.stringify(item)}</li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAGxC,IAAIS,OAAO,GAAG,IAAIC,OAAO,CAAC,CAAC;EAE3BD,OAAO,CAACE,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC;EAClDF,OAAO,CAACE,MAAM,CAAC,QAAQ,EAAE,kBAAkB,CAAC;EAE5CF,OAAO,CAACE,MAAM,CAAC,6BAA6B,EAAE,uBAAuB,CAAC;EACtEF,OAAO,CAACE,MAAM,CAAC,kCAAkC,EAAE,MAAM,CAAC;EAE1DF,OAAO,CAACE,MAAM,CAAC,KAAK,EAAE,MAAM,EAAE,SAAS,CAAC;EAExCF,OAAO,CAACE,MAAM,CAAC,eAAe,EAAE,QAAQ,GAAGC,MAAM,CAACC,MAAM,CAACC,QAAQ,GAAG,GAAG,GAAGC,QAAQ,CAAC,CAAC;EAGpFhB,SAAS,CAAC,MAAM;IACdiB,KAAK,CAACC,IAAI,EAAE;MACVC,WAAW,EAAE,SAAS;MACtBC,MAAM,EAAE,KAAK;MACbV,OAAO,EAAEA;IACX,CAAC,CAAC,CACCW,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDJ,IAAI,CAAEf,IAAI,IAAKC,OAAO,CAACD,IAAI,CAAC,CAAC,CAC7BoB,KAAK,CAAElB,KAAK,IAAKC,QAAQ,CAACD,KAAK,CAACmB,OAAO,CAAC,CAAC;EAC9C,CAAC,EAAE,EAAE,CAAC;EAEN,oBACExB,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MAAAyB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjBxB,KAAK,gBACJL,OAAA;MAAG8B,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAN,QAAA,GAAC,SAAO,EAACpB,KAAK;IAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAE9C7B,OAAA;MAAAyB,QAAA,EACGtB,IAAI,CAAC6B,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACpBlC,OAAA;QAAAyB,QAAA,EAAiBU,IAAI,CAACC,SAAS,CAACH,IAAI;MAAC,GAA5BC,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA4B,CAC3C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC3B,EAAA,CAhDQD,QAAQ;AAAAoC,EAAA,GAARpC,QAAQ;AAkDjB,eAAeA,QAAQ;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}