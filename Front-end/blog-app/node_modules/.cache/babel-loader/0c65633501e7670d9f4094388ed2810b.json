{"ast":null,"code":"var _jsxFileName = \"/home/minhminh/workspace/Blog-Fullstack/Front-end/blog-app/src/Components/User.js\";\nimport React, { useState, useEffect } from 'react';\nfunction PostList() {\n  const [posts, setPosts] = useState([]);\n  const [error, setError] = useState(null);\n  const baseUrl = \"http://localhost:8080/demo\";\n  useEffect(() => {\n    fetch(baseUrl, {\n      method: \"GET\",\n      mode: \"cors\"\n    }).then(response => {\n      // posts = response.text()\n      console.log('Data:', response.text());\n      // return posts\n    }).then(data => {\n      setPosts(data);\n    }).catch(error => {\n      setError(error);\n      console.error(\"Error.in.then: \", error.message);\n    });\n  }, []);\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  }, \"Error: \", error);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"Posts from JSONPlaceholder\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, posts));\n}\nexport default PostList;","map":{"version":3,"names":["React","useState","useEffect","PostList","posts","setPosts","error","setError","baseUrl","fetch","method","mode","then","response","console","log","text","data","catch","message","createElement","style","color","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/minhminh/workspace/Blog-Fullstack/Front-end/blog-app/src/Components/User.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction PostList() {\n  const [posts, setPosts] = useState([]);\n  const [error, setError] = useState(null);\n\n  const baseUrl = \"http://localhost:8080/demo\"\n  useEffect(() => {\n    fetch(baseUrl, {\n      method: \"GET\",\n      mode: \"cors\"\n    })\n      .then((response) => {\n        // posts = response.text()\n        console.log('Data:', response.text())\n        // return posts\n      })\n      .then((data) => {\n        setPosts(data)\n      })\n      .catch((error) => {\n        setError(error)\n        console.error(\"Error.in.then: \", error.message)\n      });\n  }, []);\n  if (error) return <p style={{ color: 'red' }}>Error: {error}</p>;\n\n  return (\n    <div>\n      <h2>Posts from JSONPlaceholder</h2>\n      <ul>\n        {posts}\n      </ul>\n    </div>\n  );\n}\n\nexport default PostList;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,SAASC,QAAQA,CAAA,EAAG;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMO,OAAO,GAAG,4BAA4B;EAC5CN,SAAS,CAAC,MAAM;IACdO,KAAK,CAACD,OAAO,EAAE;MACbE,MAAM,EAAE,KAAK;MACbC,IAAI,EAAE;IACR,CAAC,CAAC,CACCC,IAAI,CAAEC,QAAQ,IAAK;MAClB;MACAC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC;MACrC;IACF,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;MACdZ,QAAQ,CAACY,IAAI,CAAC;IAChB,CAAC,CAAC,CACDC,KAAK,CAAEZ,KAAK,IAAK;MAChBC,QAAQ,CAACD,KAAK,CAAC;MACfQ,OAAO,CAACR,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAACa,OAAO,CAAC;IACjD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EACN,IAAIb,KAAK,EAAE,oBAAON,KAAA,CAAAoB,aAAA;IAAGC,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAM,CAAE;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,SAAO,EAACtB,KAAS,CAAC;EAEhE,oBACEN,KAAA,CAAAoB,aAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACE5B,KAAA,CAAAoB,aAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,4BAA8B,CAAC,eACnC5B,KAAA,CAAAoB,aAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACGxB,KACC,CACD,CAAC;AAEV;AAEA,eAAeD,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module"}